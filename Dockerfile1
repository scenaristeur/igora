ARG NODE_VERSION=20.10.0

###
# 1. Dependencies
###

# Build with alpine linux
FROM node:${NODE_VERSION}-alpine 
# as dependencies

# USER node

# #RUN mkdir -p /home/node/app/node_modules && chown -R node:node /home/node/app

# WORKDIR /home/node/app

# COPY package.json ./

# RUN npm install

# COPY --chown=node:node . .

# EXPOSE 5173

# CMD [ "npm", "run", "start" ]


WORKDIR /home/node/

ENV NODE_ENV development

# Add `build from source` flag
#ENV npm_config_build_from_source true

# Install the tools needed for the build
#RUN apk add make g++ python3 git
#RUN npm i -g node-pre-gyp

COPY package.json *package-lock.json ./
#RUN npm ci
RUN npm install 
#COPY ts ./ts
# "prod-build" on production
#RUN npm run setup && \
#    npm prune --production

###
# 2. Application
###

# FROM node:${NODE_VERSION}-alpine
# WORKDIR /home/node/

# COPY --from=dependencies /home/node/node_modules node_modules
# COPY --from=dependencies /home/node/built built

# COPY package.json ./

# ENV PATH="$PATH:/home/node/node_modules/.bin"

# RUN chown -R node:node /home/node
# USER node

# ENV NODE_ENV production

# "start" on production
CMD ["npm", "run", "start"]